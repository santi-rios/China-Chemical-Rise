---
title: "Chemical Space Analysis"
author: "RStudio"
format:
  html:
    grid: 
      body-width: 1400px
    resources: 
      - shinylive-sw.js
      - df.csv
filters:
  - shinylive
---

## Chemical Space Evolution Analysis

```{shinylive-r}
#| standalone: true
#| viewerHeight: 800

# components: [editor, viewer]
# layout: vertical
library(shiny)
library(bslib)
library(tidyverse)
library(plotly)
library(countrycode)  # For country codes
library(DT)

######### Data Preparation #########
df <- read.csv("df.csv")

######### APP #########
ui <- fluidPage(
  theme = bs_theme(bootswatch = "flatly"),
  
  # Navbar at the top
  div(
    class = "navbar navbar-static-top primary bg-primary",
    div("China's rise in the chemical space and the decline of US influence", 
        class = "container-fluid")
  ),
  
  br(),
  
  layout_columns(
    col_widths = c(3, 9),
    
    # Control Panel
    card(
      card_header("Controls"),
      card_body(
        selectInput("facet", "Select figure:",
                    choices = unique(df$source),
                    selected = "Figure1a",
                    width = "100%"),
        selectInput("countries", "Choose Countries (delete with backspace):",
                    choices = NULL,
                    selected = NULL,
                    multiple = TRUE,
                    width = "100%"),
        
        # Add Year Slider with Animation
        sliderInput("year", "Year",
                    min = min(df$Year, na.rm = TRUE),
                    max = max(df$Year, na.rm = TRUE),
                    value = min(df$Year, na.rm = TRUE),
                    step = 1,
                    animate = animationOptions(interval = 1000, loop = TRUE))
        ,
        uiOutput("figure_description")
      )
    ),
    
    # Plots
    layout_column_wrap(
      width = 1/1,
      card(
        full_screen = TRUE,
        card_header("Figure 1"),
        card_body(
          plotlyOutput("emissionsPlot", height = "50vh")
        )
      ),
      card(
        full_screen = TRUE,
        card_header("World Map Visualization"),
        card_body(
          plotlyOutput("worldMap", height = "40vh")
        )
      )
    )
  ),
  
  br(),
  
  # Data Table
  card(
    card_header("Data Table"),
    card_body(
      DTOutput("table")
    )
  ),
  
  br(),
  
  # Download Button
  downloadButton("downloadData", "Download Data"),
  
  # Footer
  div(
    class = "navbar navbar-static-bottom bg-light",
    div(
      class = "container-fluid",
      "Data taken from Bermudez-Montana, Garcia-Chung, et al, 2025: ",
      a("https://doi.org/10.26434/chemrxiv-2025-d2zc8", 
        href = "https://chemrxiv.org/engage/chemrxiv/article-details/67920ada6dde43c908f688f6")
    )
  )
)

server <- function(input, output, session) {
  
  # Update Countries based on selected facet
  observeEvent(input$facet, {
    countries <- df %>% 
      filter(source == input$facet) %>% 
      pull(Country) %>% 
      unique()
    
    updateSelectInput(inputId = "countries", 
                      choices = countries,
                      selected = head(countries, 4))
  })
  
  # Figure Description
  output$figure_description <- renderUI({
    req(input$facet)
    desc_text <- case_when(
      input$facet == "Figure1a" ~ "Country participation in the growth of the CS",
      input$facet == "Figure1b" ~ "Eight most relevant international collaborations",
      input$facet == "Figure1c" ~ "China-US collaboration in new substances",
      input$facet == "Figure1d" ~ "GDP per capita growth rate highlights",
      input$facet == "Figure1e" ~ "Researchers in R&D activities",
      TRUE ~ paste("Displaying:", input$facet)
    )
    div(class = "text-muted", style = "margin: 10px 0;", desc_text)
  })
  
  ######### Emissions Plot #########
  output$emissionsPlot <- renderPlotly({
    req(input$countries, input$facet, input$year)
    
    # Filter data up to the current year for cumulative display
    filtered_data <- df %>% 
      filter(Country %in% input$countries, 
             source == input$facet,
             Year <= input$year) %>% 
      arrange(Year)
    
    if (nrow(filtered_data) == 0) return(plotly_empty())
    
    fig <- filtered_data %>%
      plot_ly(
        x = ~Year,
        y = ~Value,
        color = ~Country,
        type = 'scatter',
        mode = 'lines',
        line = list(simplify = FALSE, width = 2),
        hoverinfo = 'text',
        text = ~paste("Country:", Country, "<br>Year:", Year, "<br>Value:", round(Value, 2))
      )
    
    # Add annotations for the latest year
    final_data <- filtered_data %>% 
      group_by(Country) %>% 
      filter(Year == max(Year)) %>% 
      ungroup()
    
    for(i in 1:nrow(final_data)) {
      fig <- fig %>% add_annotations(
        x = final_data$Year[i],
        y = final_data$Value[i],
        text = final_data$Country[i],
        xref = "x",
        yref = "y",
        xanchor = 'left',
        yanchor = 'middle',
        showarrow = FALSE,
        font = list(size = 12),
        xshift = 10
      )
    }
    
    fig %>% layout(
      title = paste("Chemical Space Analysis -", input$facet),
      xaxis = list(title = "Year", range = c(min(df$Year, na.rm = TRUE), max(df$Year, na.rm = TRUE))),
      yaxis = list(title = "Value"),
      hovermode = "x unified",
      legend = list(orientation = "h", y = -0.2),
      margin = list(r = 40)
    )
  })
  
  ######### World Map #########
  output$worldMap <- renderPlotly({
    req(input$facet, input$year)
    
    # Filter data for the current year
    map_data <- df %>%
      filter(source == input$facet, Year == input$year) %>%
      mutate(
        iso_code = countrycode(Country, "country.name", "iso3c")
      ) %>%
      na.omit()
    
    if (nrow(map_data) == 0) return(plotly_empty())
    
    plot_geo(map_data) %>%
      add_trace(
        z = ~Value,
        color = ~Value,
        colors = "Blues",
        locations = ~iso_code,
        marker = list(line = list(color = "gray", width = 0.5)),
        text = ~paste(Country, "<br>Value:", round(Value, 2)),
        hoverinfo = "text"
      ) %>%
      colorbar(title = "Value") %>%
      layout(
        title = paste("World Map Visualization -", input$facet, "(", input$year, ")"),
        geo = list(
          showframe = FALSE,
          showcoastlines = TRUE,
          projection = list(type = "natural earth"),
          bgcolor = "rgba(0,0,0,0)",
          landcolor = "#F0F0F0",
          countrycolor = "#D3D3D3"
        ),
        margin = list(l = 0, r = 0, t = 30, b = 0)  # Adjusted top margin for title
      )
  })
  
  ######### Data Table #########
  output$table <- renderDT({
    req(input$facet)
    
    df_table <- df %>%
      filter(source == input$facet) %>%
      select(Country, Year, Value) %>%
      datatable(
        rownames = FALSE,
        options = list(
          pageLength = 10,
          lengthMenu = c(10, 20, 30),
          autoWidth = TRUE
        )
      )
    df_table  
  })
  
  ######### Download Handler #########
  output$downloadData <- downloadHandler(
    filename = function() {
      paste("data-", Sys.Date(), ".csv", sep = "")
    },
    content = function(file) {
      write.csv(df, file, row.names = FALSE)
    }
  )
}

shinyApp(ui, server)
```

## Chemical Space Analysis

$$
C_{i,t} = \frac{1}{n_t} \sum_s \frac{n_{i,s,t}}{n_{a,s,t}}
$$

**Description of Elements:**

- $Ci,tCi,t$​: Contribution of country ii to the chemical space (CS) expansion in year tt.
- $ntnt$​: Total number of new reported chemicals in year tt.
- $ss$: Index representing a specific chemical substance.
- $ni,s,tni,s,t$​: Number of authors from country ii who published substance ss for the first time in year tt.
- $na,s,tna,s,t$​: Total number of authors participating in the publication of substance ss in year tt.

::: {.callout-note}

This formula calculates the weighted contribution of a country to the discovery of new chemical substances. The contribution is proportional to the number of authors from a specific country relative to the total number of authors involved in reporting each substance. Finally, this contribution is normalized by the total number of new substances for that year.
:::